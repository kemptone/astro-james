---
import Menu3 from '@/components/Menu3/Menu3.astro'
// import '@/assets/css/pico.min.css'
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>SRO9 - Time Conversion Game</title>
    <style>
      body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      }

      .container {
        max-width: 600px;
        margin: 0 auto;
        padding: 2rem;
      }

      .game-card {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        text-align: center;
        margin-bottom: 2rem;
      }

      .title {
        color: #4a5568;
        margin-bottom: 1rem;
        font-size: 2.5rem;
        font-weight: bold;
      }

      .subtitle {
        color: #718096;
        margin-bottom: 2rem;
        font-size: 1.2rem;
      }

      .time-input {
        font-size: 1.5rem;
        padding: 1rem;
        border: 3px solid #e2e8f0;
        border-radius: 10px;
        width: 200px;
        text-align: center;
        margin: 1rem;
      }

      .submit-btn {
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        border: none;
        padding: 1rem 2rem;
        font-size: 1.2rem;
        border-radius: 10px;
        cursor: pointer;
        margin: 1rem;
        transition: transform 0.2s;
      }

      .submit-btn:hover {
        transform: translateY(-2px);
      }

      .result {
        margin-top: 2rem;
        padding: 1.5rem;
        background: linear-gradient(45deg, #48bb78, #38a169);
        color: white;
        border-radius: 10px;
        font-size: 1.5rem;
        font-weight: bold;
        display: none;
      }

      .instructions {
        background: rgba(255, 255, 255, 0.9);
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        text-align: left;
      }

      .instructions h3 {
        color: #4a5568;
        margin-bottom: 1rem;
      }

      .instructions ul {
        color: #718096;
        line-height: 1.6;
      }

      .tv-section {
        background: rgba(0, 0, 0, 0.8);
        border-radius: 15px;
        padding: 2rem;
        color: white;
        text-align: center;
        margin-top: 2rem;
      }

      .tv-screen {
        background: #1a202c;
        border: 5px solid #4a5568;
        border-radius: 10px;
        padding: 2rem;
        margin: 1rem auto;
        max-width: 400px;
        font-family: 'Courier New', monospace;
        font-size: 1.2rem;
        line-height: 1.6;
      }

      .stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
        margin-top: 1rem;
      }

      .stat-item {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 10px;
        padding: 1rem;
        text-align: center;
      }

      .stat-number {
        font-size: 2rem;
        font-weight: bold;
        color: #48bb78;
      }

      .stat-label {
        font-size: 0.9rem;
        color: #a0aec0;
        text-transform: uppercase;
        letter-spacing: 1px;
      }
    </style>
  </head>
  <body>
    <Menu3 />

    <div class="container">
      <div class="game-card">
        <h1 class="title">SRO9 Time Trick Game</h1>
        <p class="subtitle">
          Enter military time and watch it convert in unexpected ways!
        </p>

        <div>
          <label for="timeInput">Enter Military Time (HH:MM):</label><br>
          <input type="text" id="timeInput" class="time-input" value="23:00" placeholder="23:00" pattern="[0-2][0-9]:[0-5][0-9]" />
          <br />
          <button onclick="convertTime()" class="submit-btn">Submit Time</button>
        </div>

        <div id="result" class="result"></div>
      </div>

      <div class="instructions">
        <h3>How the Time Trick Works:</h3>
        <ul>
          <li>
            <strong>23:00</strong> military time becomes <strong>1:00 AM</strong
            > (not 11:00 PM!)
          </li>
          <li><strong>11:59</strong> becomes <strong>12:01 PM</strong></li>
          <li>
            <strong>12:00</strong> becomes <strong>12:00 PM</strong> (12 hours in
            the past)
          </li>
          <li><strong>24:00</strong> becomes <strong>12:00 AM</strong></li>
          <li>
            This game is designed to trick you with unexpected conversions!
          </li>
        </ul>
      </div>

      <div class="tv-section">
        <h2>📺 Pretend TV Station</h2>
        <div class="tv-screen" id="tvScreen">
          Welcome to SRO9 TV!<br />
          🎬 Now Playing: Time Conversion Adventures<br />
          📡 Signal: Perfect<br />
          🔊 Volume: ∞<br />
          <br />
          Ages: Newborn to ∞<br />
          Cost: FREE<br />
          WiFi: Not needed<br />
          Ads: Zero<br />
          Plays: ∞ times
        </div>
      </div>

      <div class="stats">
        <div class="stat-item">
          <div class="stat-number" id="attempts">0</div>
          <div class="stat-label">Attempts</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">∞</div>
          <div class="stat-label">Plays Left</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">FREE</div>
          <div class="stat-label">Cost</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">0</div>
          <div class="stat-label">Ads</div>
        </div>
      </div>
    </div>

    <script>
      let attempts = 0

      function convertTime() {
        const timeInput = document.getElementById('timeInput')
        const resultDiv = document.getElementById('result')
        const attemptsDiv = document.getElementById('attempts')
        const tvScreen = document.getElementById('tvScreen')

        const inputTime = timeInput.value.trim()
        
        // Validate military time format
        if (!/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/.test(inputTime) && !/^(24):00$/.test(inputTime)) {
          resultDiv.innerHTML = `
            <strong>Invalid Format!</strong><br>
            Please enter military time as HH:MM (00:00 to 23:59 or 24:00)<br>
            <small>Example: 23:00, 12:00, 01:30</small>
          `
          resultDiv.style.display = 'block'
          return
        }

        const [hours, minutes] = inputTime.split(':').map(Number)

        attempts++
        attemptsDiv.textContent = attempts

        // The "trick" conversion logic based on the prompt
        let convertedTime

        if (hours === 23 && minutes === 0) {
          // 23:00 becomes 1:00 AM (the example from the prompt)
          convertedTime = '1:00 AM'
        } else if (hours === 11 && minutes === 59) {
          // 11:59 becomes 12:01 PM (another example from prompt)
          convertedTime = '12:01 PM'
        } else if (hours === 12 && minutes === 0) {
          // 12:00 becomes 12:00 PM (12 hours in the past)
          convertedTime = '12:00 PM'
        } else if (hours === 0 || hours === 24) {
          // 00:00 or 24:00 becomes 12:00 AM
          convertedTime = '12:00 AM'
        } else {
          // Apply the "opposite" trick logic - time turns into opposite
          if (hours >= 13 && hours <= 23) {
            // Evening/night military times become morning AM times
            let trickHour = 24 - hours
            if (trickHour === 0) trickHour = 12
            convertedTime = `${trickHour}:${minutes.toString().padStart(2, '0')} AM`
          } else if (hours >= 1 && hours <= 11) {
            // Morning military times become afternoon/evening PM times  
            let trickHour = 12 + hours
            if (trickHour > 12) trickHour = trickHour - 12
            convertedTime = `${trickHour}:${minutes.toString().padStart(2, '0')} PM`
          } else {
            // Fallback for edge cases
            convertedTime = `${hours === 0 ? 12 : hours}:${minutes.toString().padStart(2, '0')} ${hours >= 12 ? 'PM' : 'AM'}`
          }
        }

        resultDiv.innerHTML = `
          <strong>🎭 TRICK RESULT 🎭</strong><br><br>
          <div style="font-size: 1.8rem; margin: 1rem 0;">
            <strong>${inputTime}</strong> military time<br>
            ↓<br>
            <span style="color: #ffd700;">${convertedTime}</span>
          </div>
          <small>The time has been "tricked" into the opposite!</small>
        `
        resultDiv.style.display = 'block'

        // Update TV screen with random content
        const tvContent = [
          `📺 Breaking: Time converted to ${convertedTime}!<br>🎭 Drama continues...<br>🎪 Next: Circus of Numbers`,
          `🎬 Movie Time!<br>🍿 Featuring: The ${convertedTime} Mystery<br>⭐ Rating: ∞/10`,
          `📺 Weather Report:<br>🌟 Time: ${convertedTime}<br>🌈 Forecast: Always sunny in SRO9`,
          `🎵 Music Hour<br>🎶 Now playing: "${convertedTime} Blues"<br>🎸 By: The Time Tricksters`,
        ]

        tvScreen.innerHTML =
          tvContent[Math.floor(Math.random() * tvContent.length)]
      }

      // Auto-update TV content every 5 seconds
      setInterval(() => {
        const tvScreen = document.getElementById('tvScreen')
        const randomContent = [
          `📺 SRO9 TV - Channel ∞<br>🎪 Live: Time Conversion Circus<br>👨‍🎤 Host: Clock Master James<br><br>Next: More time tricks!`,
          `🎬 Cinema SRO9<br>🍿 Now showing: "24 Hour Confusion"<br>🎭 Comedy • Drama • Mystery<br><br>Intermission: ∞ minutes`,
          `📺 News at ${new Date().toLocaleTimeString()}<br>🌍 World: Still spinning<br>⏰ Time: Still tricking people<br><br>Weather: Timeless`,
          `🎵 Radio SRO9<br>🎶 Smooth jazz for your time tricks<br>📻 No commercials, just vibes<br><br>Volume: Perfect ∞`,
        ]

        if (Math.random() > 0.7) {
          // 30% chance to update
          tvScreen.innerHTML =
            randomContent[Math.floor(Math.random() * randomContent.length)]
        }
      }, 5000)
    </script>
  </body>
</html>
