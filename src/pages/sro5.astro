---
import Layout from '../layouts/Layout.astro'
---

<Layout title="SRO5 - M-Name Bank">
  <main>
    <div id="name-check-screen" class="screen active">
      <div class="welcome-section">
        <h1>🏦 Welcome to M-Name Bank 🏦</h1>
        <div class="character-intro">
          <div class="penelope-section">
            <div class="character-avatar penelope">👩🏻‍💼</div>
            <div class="character-speech">
              <h3>Hi! I'm Penelope 💙</h3>
              <p>I'm here to help you with our special banking system! This game is only for people whose names start with "M".</p>
            </div>
          </div>
          
          <div class="chris-section">
            <div class="character-avatar chris">👦🏻</div>
            <div class="character-speech mean">
              <h3>I'm Chris 😠</h3>
              <p>You better have an M name or you can't play! I'm Penelope's brother and I don't like rule breakers!</p>
            </div>
          </div>
          
          <div class="molly-section">
            <div class="character-avatar molly">👶🏻</div>
            <div class="character-speech baby">
              <h3>Molly! 🍼</h3>
              <p>Goo goo ga ga! (I'm the baby sister!)</p>
            </div>
          </div>
        </div>
        
        <div class="name-input-section">
          <label for="player-name">Enter Your Name:</label>
          <input type="text" id="player-name" placeholder="Type your name here..." />
          <button id="check-name-btn" class="check-btn">✅ Check Name</button>
          <div id="name-result" class="name-result"></div>
        </div>
      </div>
    </div>

    <div id="banking-screen" class="screen">
      <div class="banking-container">
        <h1>💰 M-Name Bank - Money Buying System 💰</h1>
        
        <div class="warning-section">
          <div class="caillou-warning">
            <div class="character-avatar caillou">👦🏻‍🦲</div>
            <div class="warning-speech">
              <h3>⚠️ Caillou's Business Warning ⚠️</h3>
              <p>You cannot pay too much money, or someone may decline the request from whatever!</p>
            </div>
          </div>
        </div>

        <div class="bitbibbies-section">
          <h3>🎯 BitBibbies Required!</h3>
          <p>This game needs to be combined with BitBibbies to work. BitBibbies combine games and make others get thanked!</p>
          <button id="add-bitbibbies-btn" class="bitbibbies-btn">Add BitBibbies</button>
          <div id="bitbibbies-status" class="bitbibbies-status">❌ BitBibbies Not Added - Game Disabled</div>
        </div>

        <div id="banking-interface" class="banking-interface disabled">
          <div class="bank-balance">
            <h3>💵 Your Bank Balance</h3>
            <div class="balance-amount" id="balance-amount">$1,000.00</div>
          </div>

          <div class="money-buying-section">
            <h3>💸 Buy Money for Anything</h3>
            <div class="purchase-options">
              <div class="purchase-item">
                <span>Buy $100</span>
                <button class="buy-btn" data-amount="100" data-cost="10">Cost: $10</button>
              </div>
              <div class="purchase-item">
                <span>Buy $500</span>
                <button class="buy-btn" data-amount="500" data-cost="45">Cost: $45</button>
              </div>
              <div class="purchase-item">
                <span>Buy $1,000</span>
                <button class="buy-btn" data-amount="1000" data-cost="80">Cost: $80</button>
              </div>
              <div class="purchase-item">
                <span>Buy $5,000</span>
                <button class="buy-btn" data-amount="5000" data-cost="350">Cost: $350</button>
              </div>
            </div>
          </div>

          <div class="mina-assistant">
            <h3>🤖 Talk to Mina (Your AI Assistant)</h3>
            <div class="mina-chat">
              <div class="mina-avatar">🎙️</div>
              <div class="mina-info">
                <p><strong>Mina English</strong> - Your helpful aide</p>
                <p>Voice: Jenny from Microsoft</p>
                <p>She knows all apps from boodeboo.com and your app history!</p>
              </div>
            </div>
            <div class="chat-interface">
              <div id="chat-messages" class="chat-messages">
                <div class="mina-message">
                  <strong>Mina:</strong> Hello! I'm here to help you with banking and tell you about your apps. What would you like to know?
                </div>
              </div>
              <div class="chat-input">
                <input type="text" id="chat-input" placeholder="Ask Mina about your apps or this banking game..." />
                <button id="send-chat-btn">Send</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .screen {
    display: none;
  }

  .screen.active {
    display: block;
  }

  h1 {
    color: #2c5aa0;
    font-size: 2.5rem;
    text-align: center;
    margin-bottom: 2rem;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
  }

  /* Name Check Screen */
  .welcome-section {
    background: linear-gradient(135deg, #74b9ff, #0984e3);
    color: white;
    padding: 2rem;
    border-radius: 20px;
    text-align: center;
  }

  .character-intro {
    display: grid;
    gap: 1.5rem;
    margin: 2rem 0;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
  }

  .penelope-section,
  .chris-section,
  .molly-section {
    display: flex;
    align-items: center;
    gap: 1rem;
    background: rgba(255,255,255,0.1);
    padding: 1.5rem;
    border-radius: 15px;
    backdrop-filter: blur(10px);
  }

  .character-avatar {
    font-size: 3rem;
    min-width: 80px;
    text-align: center;
  }

  .character-speech {
    text-align: left;
  }

  .character-speech.mean {
    color: #ff6b6b;
  }

  .character-speech.baby {
    color: #ffd93d;
  }

  .penelope-section .character-speech {
    color: #74b9ff;
  }

  .name-input-section {
    background: rgba(255,255,255,0.15);
    padding: 2rem;
    border-radius: 15px;
    margin-top: 2rem;
  }

  #player-name {
    font-size: 1.2rem;
    padding: 1rem;
    border: none;
    border-radius: 10px;
    width: 300px;
    margin: 1rem;
    text-align: center;
  }

  .check-btn {
    font-size: 1.1rem;
    padding: 1rem 2rem;
    background: linear-gradient(45deg, #00cec9, #55a3ff);
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    font-weight: bold;
    margin: 1rem;
  }

  .name-result {
    margin-top: 1rem;
    font-size: 1.2rem;
    font-weight: bold;
  }

  .name-result.success {
    color: #00b894;
  }

  .name-result.error {
    color: #ff6b6b;
  }

  /* Banking Screen */
  .banking-container {
    background: linear-gradient(135deg, #a29bfe, #6c5ce7);
    color: white;
    padding: 2rem;
    border-radius: 20px;
  }

  .warning-section {
    background: rgba(255, 107, 107, 0.2);
    border: 2px solid #ff6b6b;
    border-radius: 15px;
    padding: 1.5rem;
    margin: 2rem 0;
  }

  .caillou-warning {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .warning-speech {
    text-align: left;
  }

  .bitbibbies-section {
    background: rgba(255,255,255,0.1);
    padding: 2rem;
    border-radius: 15px;
    margin: 2rem 0;
    text-align: center;
  }

  .bitbibbies-btn {
    font-size: 1.3rem;
    padding: 1rem 2rem;
    background: rgb(0, 0, 255);
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    font-weight: bold;
    margin: 1rem 0;
  }

  .bitbibbies-status {
    font-size: 1.1rem;
    font-weight: bold;
    margin-top: 1rem;
  }

  .bitbibbies-status.active {
    color: #00b894;
  }

  .banking-interface {
    margin-top: 2rem;
  }

  .banking-interface.disabled {
    opacity: 0.5;
    pointer-events: none;
  }

  .bank-balance {
    text-align: center;
    background: rgba(255,255,255,0.15);
    padding: 2rem;
    border-radius: 15px;
    margin-bottom: 2rem;
  }

  .balance-amount {
    font-size: 3rem;
    font-weight: bold;
    color: #00b894;
    margin-top: 1rem;
  }

  .money-buying-section {
    background: rgba(255,255,255,0.1);
    padding: 2rem;
    border-radius: 15px;
    margin-bottom: 2rem;
  }

  .purchase-options {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
  }

  .purchase-item {
    background: rgba(255,255,255,0.1);
    padding: 1.5rem;
    border-radius: 10px;
    text-align: center;
    border: 2px solid transparent;
    transition: all 0.3s ease;
  }

  .purchase-item:hover {
    border-color: rgba(255,255,255,0.5);
    transform: translateY(-2px);
  }

  .buy-btn {
    background: linear-gradient(45deg, #00b894, #00cec9);
    color: white;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
    cursor: pointer;
    font-weight: bold;
    margin-top: 1rem;
    width: 100%;
  }

  .buy-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
  }

  .mina-assistant {
    background: rgba(255,255,255,0.1);
    padding: 2rem;
    border-radius: 15px;
  }

  .mina-chat {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .mina-avatar {
    font-size: 3rem;
  }

  .chat-interface {
    background: rgba(255,255,255,0.1);
    border-radius: 10px;
    overflow: hidden;
  }

  .chat-messages {
    height: 200px;
    overflow-y: auto;
    padding: 1rem;
    background: rgba(0,0,0,0.1);
  }

  .mina-message,
  .user-message {
    margin-bottom: 1rem;
    padding: 0.5rem;
    border-radius: 8px;
  }

  .mina-message {
    background: rgba(116, 185, 255, 0.2);
  }

  .user-message {
    background: rgba(255,255,255,0.1);
    text-align: right;
  }

  .chat-input {
    display: flex;
    padding: 1rem;
  }

  #chat-input {
    flex: 1;
    padding: 0.8rem;
    border: none;
    border-radius: 8px 0 0 8px;
    font-size: 1rem;
  }

  #send-chat-btn {
    background: #74b9ff;
    color: white;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 0 8px 8px 0;
    cursor: pointer;
    font-weight: bold;
  }

  @media (max-width: 768px) {
    .character-intro {
      gap: 1rem;
    }
    
    .penelope-section,
    .chris-section,
    .molly-section {
      flex-direction: column;
      text-align: center;
    }
    
    .purchase-options {
      grid-template-columns: 1fr;
    }
    
    #player-name {
      width: 250px;
    }
  }
</style>

<script>
  const nameCheckScreen = document.getElementById('name-check-screen')
  const bankingScreen = document.getElementById('banking-screen')
  const playerNameInput = document.getElementById('player-name') as HTMLInputElement
  const checkNameBtn = document.getElementById('check-name-btn')
  const nameResult = document.getElementById('name-result')
  const addBitbibbiesBtn = document.getElementById('add-bitbibbies-btn')
  const bitbibbiesStatus = document.getElementById('bitbibbies-status')
  const bankingInterface = document.getElementById('banking-interface')
  const balanceAmount = document.getElementById('balance-amount')
  const buyBtns = document.querySelectorAll('.buy-btn')
  const chatInput = document.getElementById('chat-input') as HTMLInputElement
  const sendChatBtn = document.getElementById('send-chat-btn')
  const chatMessages = document.getElementById('chat-messages')

  let currentBalance = 1000
  let bitbibbiesActive = false
  let playerName = ''

  // Name checking functionality
  checkNameBtn?.addEventListener('click', checkPlayerName)
  playerNameInput?.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      checkPlayerName()
    }
  })

  function checkPlayerName() {
    const name = playerNameInput.value.trim()
    
    if (!name) {
      showNameResult('Please enter your name!', 'error')
      return
    }

    // Check if name starts with M or is just "M"
    if (name.toUpperCase().startsWith('M') || name.toUpperCase() === 'M') {
      playerName = name
      showNameResult(`✅ Welcome ${name}! You can access M-Name Bank!`, 'success')
      
      setTimeout(() => {
        nameCheckScreen?.classList.remove('active')
        bankingScreen?.classList.add('active')
      }, 2000)
    } else {
      const firstLetter = name.charAt(0).toUpperCase()
      if ('ABCDEFGHIJKLNOPQRSTUVWXYZ'.includes(firstLetter)) {
        showNameResult(`❌ Sorry ${name}, your name starts with "${firstLetter}". This game is disabled for you. Only M names allowed!`, 'error')
      } else {
        showNameResult('❌ Invalid name. Please enter a valid name.', 'error')
      }
    }
  }

  function showNameResult(message: string, type: string) {
    if (nameResult) {
      nameResult.textContent = message
      nameResult.className = `name-result ${type}`
    }
  }

  // BitBibbies functionality
  addBitbibbiesBtn?.addEventListener('click', () => {
    bitbibbiesActive = true
    bitbibbiesStatus.textContent = '✅ BitBibbies Active - Game Enabled'
    bitbibbiesStatus.classList.add('active')
    bankingInterface?.classList.remove('disabled')
    
    addBitbibbiesBtn.textContent = '✨ BitBibbies Active! ✨'
    addBitbibbiesBtn.style.background = 'linear-gradient(45deg, #a29bfe, #fd79a8)'
    
    addMinaMessage('BitBibbies have been activated! The banking system is now fully operational. You can now buy money for anything you need!')
  })

  // Banking functionality
  buyBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      if (!bitbibbiesActive) {
        alert('Please add BitBibbies first to enable the banking system!')
        return
      }

      const amount = parseInt(btn.getAttribute('data-amount') || '0')
      const cost = parseInt(btn.getAttribute('data-cost') || '0')

      if (currentBalance < cost) {
        alert('Insufficient funds! You need more money in your account.')
        return
      }

      if (cost > currentBalance * 0.8) {
        alert('⚠️ Caillou\'s Warning: You cannot pay too much money, or someone may decline the request!')
        return
      }

      currentBalance = currentBalance - cost + amount
      updateBalance()
      
      alert(`💰 Purchase successful! You bought $${amount} for $${cost}. Your new balance is $${currentBalance.toLocaleString()}.`)
      
      addMinaMessage(`Great purchase! You bought $${amount} for only $${cost}. That's a smart financial decision for your apps and projects!`)
    })
  })

  function updateBalance() {
    if (balanceAmount) {
      balanceAmount.textContent = `$${currentBalance.toLocaleString()}.00`
    }
  }

  // Mina chat functionality
  sendChatBtn?.addEventListener('click', sendMessage)
  chatInput?.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      sendMessage()
    }
  })

  function sendMessage() {
    const message = chatInput.value.trim()
    if (!message) return

    addUserMessage(message)
    chatInput.value = ''

    // Simulate Mina's response
    setTimeout(() => {
      const response = getMinaResponse(message)
      addMinaMessage(response)
      
      // Simulate text-to-speech announcement
      if ('speechSynthesis' in window) {
        const utterance = new SpeechSynthesisUtterance(response)
        utterance.voice = speechSynthesis.getVoices().find(voice => voice.name.includes('Jenny')) || speechSynthesis.getVoices()[0]
        speechSynthesis.speak(utterance)
      }
    }, 1000)
  }

  function addUserMessage(message: string) {
    const messageDiv = document.createElement('div')
    messageDiv.className = 'user-message'
    messageDiv.innerHTML = `<strong>You:</strong> ${message}`
    chatMessages?.appendChild(messageDiv)
    scrollChatToBottom()
  }

  function addMinaMessage(message: string) {
    const messageDiv = document.createElement('div')
    messageDiv.className = 'mina-message'
    messageDiv.innerHTML = `<strong>Mina:</strong> ${message}`
    chatMessages?.appendChild(messageDiv)
    scrollChatToBottom()
  }

  function scrollChatToBottom() {
    if (chatMessages) {
      chatMessages.scrollTop = chatMessages.scrollHeight
    }
  }

  function getMinaResponse(userMessage: string): string {
    const lowerMessage = userMessage.toLowerCase()
    
    if (lowerMessage.includes('app') || lowerMessage.includes('boodeboo')) {
      return `I know all about the apps from boodeboo.com! You've created some amazing tools. This banking system helps you buy money for any of your app projects. What specific app are you working on?`
    }
    
    if (lowerMessage.includes('bank') || lowerMessage.includes('money')) {
      return `The M-Name Bank is perfect for ${playerName}! You can buy money here for anything you need. The exchange rates are designed to help you grow your funds efficiently. Remember Caillou's warning about not paying too much!`
    }
    
    if (lowerMessage.includes('game') || lowerMessage.includes('sro')) {
      return `This SRO5 game is part of your collection! I help combine all the SRO games with BitBibbies. Each game teaches different skills - this one focuses on financial management and smart money decisions.`
    }
    
    if (lowerMessage.includes('help') || lowerMessage.includes('how')) {
      return `I'm here to help! You can ask me about your apps, how the banking system works, or anything about boodeboo.com. I remember all your past projects and can guide you through this financial game.`
    }
    
    return `Thanks for talking with me, ${playerName}! I understand you're interested in "${userMessage}". As your AI assistant, I'm here to help with all your app development and banking needs. What else would you like to know?`
  }
</script>
</Layout>